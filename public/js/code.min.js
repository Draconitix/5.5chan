var app=angular.module("Chan",["ngResource","ui.router","ngCookies","angular-jwt","ngDialog","uiCropper"]);app.config(function($interpolateProvider){$interpolateProvider.startSymbol("{[{"),$interpolateProvider.endSymbol("}]}")}),app.config(["$qProvider",function($qProvider){$qProvider.errorOnUnhandledRejections(!1)}]),app.config(function(ngDialogProvider){ngDialogProvider.setForceBodyReload(!0)}),app.config(function($stateProvider){$stateProvider.state("login",{url:"/login",templateUrl:"/partials/login.html",controller:"loginState"}).state("register",{url:"/register",templateUrl:"/partials/register.html",controller:"registerState"}).state("interface",{url:"/interface",templateUrl:"/partials/interface.html",controller:"interfaceState"}).state("profile",{url:"/profile",templateUrl:"/partials/profile.html",controller:"profileState"})}).run(function($state){$state.go("login")}),app.controller("interfaceState",function($scope,$state,$cookies,userSocket,jwtHelper,formInputValidate){var token=$cookies.get("accessToken");void 0===token&&$state.go("login"),$scope.user=jwtHelper.decodeToken(token);$scope.logout=function(){$cookies.remove("accessToken"),$state.go("login")};$scope.chatrooms=[],$scope.joined=null!=$cookies.get("chatroom")&&$cookies.get("chatroom"),$scope.posts=[],$scope.joinChat=function(name){userSocket.join(name)},$scope.leaveChat=function(){userSocket.leave($scope.joined),$scope.joined=!1};userSocket.promise(function(err){err?(console.log(err),"update"==err&&refrRooms()):($scope.joined=$cookies.get("chatroom"),$scope.$apply(),refrRooms())});var refrRooms=function(){userSocket.getRooms().then(function(res){$scope.chatrooms=res},function(err){console.log(err)})},refrUsers=function(type){userSocket.getUsers().then(function(res){var usrArr=[];usrArr[0]="wait";for(var i=0;i<res.length;i++)$scope.user.username==res[i].username?usrArr[0]={username:$scope.user.username,creator:!0,included:!0}:usrArr.push({username:res[i].username,creator:!1,included:!1});"add"==type&&($scope.addUsers=usrArr),"edit"==type&&($scope.editUsers=usrArr)},function(err){console.log(err)})};refrRooms(),$scope.newroom={name:"",private:!1,users:[]},$scope.addErrs={name:"",private:"",users:""},$scope.adding=!1,$scope.addUsers=[],$scope.toggleCreate=function(){$scope.adding=1!=$scope.adding},refrUsers("add");var injectUsers=function(type){var arr,array,obj;"add"==type&&($scope.newroom.users=[],array=$scope.newroom.users,obj=$scope.newroom,arr=$scope.addUsers),"edit"==type&&($scope.editroom.users=[],array=$scope.editroom.users,obj=$scope.editroom,arr=$scope.editUsers);for(var i=0;i<arr.length;i++)1==arr[i].included?array.push(arr[i].username):1==arr[i].creator&&(obj.creator=arr[i].username)};$scope.createRoom=function(){var data,src=$scope.newroom;1==$scope.newroom.private?(injectUsers("add"),data=src):data={name:$scope.newroom.name,private:$scope.newroom.private,users:[]};var errs=formInputValidate.check(data);0==errs.num?(console.log(data),userSocket.createRoom(data).then(function(res){refrRooms(),$scope.adding=!1},function(err){console.log(err)})):console.log(errs)},$scope.deleteRoom=function(name){userSocket.deleteRoom({name:name}).then(function(res){refrRooms(),$scope.editing=!1},function(err){console.log(err)})},$scope.editInitial={},$scope.editroom={},$scope.editing=!1,$scope.editUsers=[],$scope.toggleEdit=function(index){if(0==$scope.editing){if($scope.editing=!0,$scope.editroom=$scope.chatrooms[index],$scope.editInitial=angular.copy($scope.chatrooms[index]),refrUsers("edit"),$scope.editroom.users!=[])for(var i=0;i<$scope.editUsers.length;i++)null!=$scope.editroom.users[i]&&$scope.editroom.users[i]==$scope.editUsers.username&&($scope.editUsers[i].included=!0)}else $scope.editing=!1},$scope.editRoom=function(){var data,src=$scope.editroom;1==src.private?(injectUsers("edit"),data=src,console.log(data)):data={name:src.name,private:src.private,users:[],user:$scope.user.username};var errs=formInputValidate.check(data);0==errs.num?userSocket.editRoom($scope.editInitial,$scope.editroom).then(function(res){$scope.editing=!1},function(err){console.log(err)}):console.log(errs)},0!=$scope.joined&&userSocket.join($scope.joined),$scope.validate=function(input,field){var obj={};if(null!=(obj[field]=input)){var errs=formInputValidate.check(obj);0<errs.num?($scope.addErrs[field]=errs[field],console.log(JSON.stringify(errs[field]))):"username"===field?input!=$scope.user.username&&input!=$scope.user.email&&formInputValidate.taken(field,input).then(function(res){if(0!=res.length){var fullStr=field.charAt(0).toUpperCase()+field.split(field[0])[1]+" is already taken.";$scope.addErrs[field]=fullStr}else $scope.addErrs[field]=""}):$scope.addErrs[field]=""}}}),app.controller("loginState",function(login,$scope,$state,formInputValidate,$cookies){null!=$cookies.get("accessToken")&&$state.go("interface"),$scope.loginMain=function(){var errors=formInputValidate.check($scope.user);0==errors.num?($scope.user.password=sha256($scope.user.password),login($scope.user).then(function(response){$state.go("profile")},function(error){$scope.errors.main="User not found."})):$scope.errors=errors},$scope.user={username:"",password:""},$scope.errors={},$scope.validate=function(input,field){var obj={};if(null!=(obj[field]=input)){var errs=formInputValidate.check(obj);0<errs.num?($scope.errors[field]=errs[field],console.log(JSON.stringify(errs[field]))):$scope.errors[field]=""}}}),app.controller("profileState",function($scope,$cookies,jwtHelper,$state,assets,ngDialog,profile,formInputValidate,profile){null==$cookies.get("accessToken")&&$state.go("login");var token=$cookies.get("accessToken");$scope.user=jwtHelper.decodeToken(token),$scope.eUser={username:$scope.user.username,email:$scope.user.email,desc:$scope.user.desc},$scope.userImgUri="",$scope.imgUriFolder="",$scope.imgType="",$scope.editing=!1,$scope.errors={},$scope.profileLoading=!1,$scope.currentFile="",$scope.changeFile=function(files){$scope.currentFile=files[0],$scope.$apply()},$scope.toggleEdit=function(){0==$scope.editing?$scope.editing=!0:$scope.editing=!1},$scope.put=function(){var formData=new FormData,errors=formInputValidate.check($scope.eUser);console.log(errors),0==/(\.jpg|\.JPG|\.JPEG|\.jpeg|\.png|\.PNG|\.gif|\.GIF)$/g.test($scope.currentFile.name)&&""!=$scope.currentFile&&(errors.num+=1,$scope.errors.profile="Profile image must be a image file",console.log("file error")),0==errors.num?(formData.append("username",$scope.eUser.username),formData.append("email",$scope.eUser.email),formData.append("desc",$scope.eUser.desc),""!=$scope.currentFile&&formData.append("profile",$scope.currentFile),profile.edit(formData).then(function(response){$state.go("profile"),refresh()},function(error){console.log(error)})):($scope.errors=errors,0==/(\.jpg|\.JPG|\.JPEG|\.jpeg|\.png|\.PNG|\.gif|\.GIF)$/g.test($scope.currentFile.name)&&""!=$scope.currentFile&&($scope.errors.profile="Profile image must be a image file"))},$scope.saveCrop=function(){assets.crop($scope.user.username,$scope.cropped.image).then(function(response){console.log(response)},function(err){console.log(err)}),ngDialog.closeAll(),$scope.userImgUri=$scope.cropped.image},$scope.del=function(){profile.remove().then(function(res){console.log(res),$state.go("login")})},$scope.crop=function(){ngDialog.open({template:"partials/cropper.html",scope:$scope,width:"100vw",height:"70vh",showClose:!1})},$scope.validate=function(input,field){var obj={};if(null!=(obj[field]=input)){var errs=formInputValidate.check(obj);0<errs.num?($scope.errors[field]=errs[field],console.log(JSON.stringify(errs[field]))):"username"===field||"email"===field?input!=$scope.user.username&&input!=$scope.user.email&&formInputValidate.taken(field,input).then(function(res){if(0!=res.length){var fullStr=field.charAt(0).toUpperCase()+field.split(field[0])[1]+" is already taken.";$scope.errors[field]=fullStr}else $scope.errors[field]=""}):$scope.errors[field]=""}},$scope.canCrop=!1,assets.get($scope.user.username,"profile").then(function(response){1==response.thumb?(1==response.cropped?$scope.userImgUri=response.uri+"cropped.png":$scope.userImgUri=response.uri+"default."+response.type,$scope.imgUriFolder=response.uri,$scope.imgType=response.type,console.log(response.scaled),1==response.scaled?$scope.canCrop=!0:$scope.canCrop=!1,$scope.cropped={source:response.uri+"scaled."+response.type},console.log(response)):$scope.userImgUri=response.uri+"original."+response.type},function(err){console.log(err)});var gAdding=!($scope.logout=function(){$cookies.remove("accessToken"),$state.go("login")});$scope.galleryLoading=!0,$scope.galleryDText="Remove images from gallery",$scope.galleryT=!1,$scope.galleryD=!1,$scope.gallery=[];$scope.gChangeFile=function(files){0==gAdding&&($scope.gCurrentFiles=files,$scope.$apply())},$scope.addToGallery=function(){gAdding=!0,$scope.galleryLoading=!0;var maxLimit=$scope.gCurrentFiles.length,currentFiles=$scope.gCurrentFiles,i=0,fullRes=[],main=function(){var fd=new FormData;fd.append("file",currentFiles[i]),assets.create(fd).then(function(res){fullRes.push(res),loop()},function(err){console.log(err),loop()}),i++},loop=function(){i<=maxLimit-1&&main(),i==maxLimit&&(gAdding=!1,console.log("rn"),setTimeout(function(){galleryData(),$scope.galleryLoading=!1,$scope.gCurrentFiles=[]},2e3))};0<$scope.gCurrentFiles.length&&main()},$scope.galleryToggle=function(){0==$scope.galleryT?$scope.galleryT=!0:$scope.galleryT=!1};var galleryData=function(){assets.get($scope.user.username,"gallery").then(function(res){!function(res){if(console.log(res),Array.isArray(res)){$scope.gallery=[];for(var i=0;i<res.length;i++)$scope.gallery.push(res[i]),console.log(res[i].uri),res.length}else $scope.gallery=[],$scope.gallery.push(res),console.log("notArray"),$scope.$apply()}(res),$scope.galleryLoading=!1},function(err){console.log(err)})};$scope.galleryDelToggle=function(){0==$scope.galleryD?($scope.galleryD=!0,$scope.galleryDText="Stop removing images from gallery"):($scope.galleryD=!1,$scope.galleryDText="Remove images from gallery")},galleryData();var all=!($scope.galleryDel=function(){var maxLimit=$scope.gallery.length,i=0,main=function(){1==$scope.gallery[i].delete?(assets.remove(JSON.stringify([{uri:$scope.gallery[i].uri,user:$scope.gallery[i].user,filename:$scope.gallery[i].filename}])).then(function(res){console.log(res),loop()},function(err){console.log(err),loop()}),i++):(console.log(i+" not deleting"),i++,loop())},loop=function(){if(i<=maxLimit-1&&(main(),i==maxLimit)){for(var s=maxLimit-1;0<=s;s--)1==$scope.gallery[s].delete&&$scope.gallery.splice(s,1);0==$scope.gallery.length&&($scope.galleryD=!1,$scope.galleryDText="Remove images from gallery")}};0<maxLimit&&main()});$scope.gallerySAText="Select All",$scope.galleryDelSelectAll=function(){0==all?(all=!0,$scope.gallerySAText="Deselect All"):(all=!1,$scope.gallerySAText="Select All");for(var w=0;w<$scope.gallery.length;w++)$scope.gallery[w].delete=all},$scope.setAsProfile=function(imgData){0==$scope.profileLoading&&0==$scope.galleryD&&0==gAdding&&assets.editProfile(imgData).then(function(res){refresh(),galleryData()},function(err){console.log(err)})};var refresh=function(){$scope.profileLoading=!0,token=$cookies.get("accessToken"),$scope.user=jwtHelper.decodeToken(token),$scope.editing=!1,$scope.currentFile="",formData=new FormData,$scope.eUser={username:$scope.user.username,email:$scope.user.email,desc:$scope.user.desc},setTimeout(function(){assets.get($scope.user.username,"profile").then(function(response){1==response.thumb?(1==response.cropped?$scope.userImgUri=response.uri+"cropped.png":$scope.userImgUri=response.uri+"default."+response.type,$scope.imgUriFolder=response.uri,$scope.imgType=response.type,1==response.scaled?$scope.canCrop=!0:$scope.canCrop=!1,$scope.cropped={source:response.uri+"scaled."+response.type},$scope.cropped={source:response.uri+"scaled."+response.type},console.log(response)):$scope.userImgUri=response.uri+"original."+response.type},function(err){console.log(err)}),""!=formData.get("profile")&&galleryData(),$scope.profileLoading=!1},3e3)}}),app.controller("registerState",function($scope,$state,register,formInputValidate,$cookies){null!=$cookies.get("accessToken")&&$state.go("interface");var formData=new FormData;$scope.currentFile="",$scope.user={username:"",password:"",email:"",desc:""},$scope.errors={},$scope.changeFile=function(files){$scope.currentFile=files[0],$scope.$apply()},$scope.validate=function(input,field){var obj={};if(null!=(obj[field]=input)){var errs=formInputValidate.check(obj);0<errs.num?($scope.errors[field]=errs[field],console.log(JSON.stringify(errs[field]))):"username"===field||"email"===field?formInputValidate.taken(field,input).then(function(res){if(0!=res.length){var fullStr=field.charAt(0).toUpperCase()+field.split(field[0])[1]+" is already taken.";$scope.errors[field]=fullStr}else $scope.errors[field]=""}):$scope.errors[field]=""}},$scope.register=function(){var errors=formInputValidate.check($scope.user);0==/(\.jpg|\.JPG|\.JPEG|\.jpeg|\.png|\.PNG|\.gif|\.GIF)$/g.test($scope.currentFile.name)&&""!=$scope.currentFile&&(errors.num+=1,$scope.errors.profile="Profile image must be a image file"),0==errors.num?(formData.append("username",$scope.user.username),formData.append("password",sha256($scope.user.password)),formData.append("email",$scope.user.email),formData.append("desc",$scope.user.desc),""!=$scope.currentFile&&formData.append("profile",$scope.currentFile),register(formData).then(function(response){$scope.currentFile="",formData=new FormData,$state.go("profile"),$scope.user={username:"",password:"",email:"",desc:""}},function(error){console.log(error)})):($scope.errors=errors,0==/(\.jpg|\.JPG|\.JPEG|\.jpeg|\.png|\.PNG|\.gif|\.GIF)$/g.test($scope.currentFile.name)&&""!=$scope.currentFile&&($scope.errors.profile="Profile image must be a image file"))}}),app.controller("test",["$scope","universal",function($scope,universal){$scope.assets=universal.query(),$scope.test="Watch your profanity."}]),app.service("assets",function($cookies,$http,$q){var token=$cookies.get("accessToken");return null==token?null:{get:function(username,locat){var deferred=$q.defer();return $http({method:"GET",url:"chat/asset/lst",params:{user:username,location:locat},headers:{Authorization:"Bearer "+token}}).then(function(response){"profile"==locat?deferred.resolve(response.data[0]):deferred.resolve(response.data)},function(err){deferred.reject(err)}),deferred.promise},crop:function(username,data){var deferred=$q.defer();return $http({method:"POST",url:"chat/asset/crop",data:{user:username,data:data},headers:{Authorization:"Bearer "+token}}).then(function(response){console.log(response),deferred.resolve(response.data)},function(err){deferred.reject(err)}),deferred.promise},create:function(files){var deferred=$q.defer();return console.log(files.get("file")),$http({method:"POST",url:"chat/asset/create",transformRequest:angular.identity,headers:{"Content-Type":void 0,Authorization:"Bearer "+token},data:files}).then(function(response){deferred.resolve(response.data)},function(err){deferred.reject(err)}),deferred.promise},remove:function(query){var deferred=$q.defer();return $http({method:"DELETE",url:"chat/asset/remove",transformRequest:angular.identity,headers:{"Content-Type":"application/json;charset=utf-8",Authorization:"Bearer "+token},data:query}).then(function(res){deferred.resolve(res.data)},function(err){deferred.reject(err)}),deferred.promise},editProfile:function(data){var deferred=$q.defer();return $http({method:"PUT",url:"chat/asset/update",headers:{Authorization:"Bearer "+token},data:data}).then(function(response){deferred.resolve(response.data)},function(err){deferred.reject(err)}),deferred.promise}}}),app.service("formInputValidate",function($http,$q,$cookies){var fields,data,errorNum=0,errors={username:"",password:"",email:"",firstname:"",lastname:"",desc:"",name:"",users:"",private:""},checkSwitch=function(field){switch(field){case"username":data[field].length<4?(errorNum++,errors[field]="Username must have at least 4 characters."):15<data[field].length&&(errorNum++,errors[field]="Username must be less than 16 characters.");break;case"password":data[field].length<6&&(errorNum++,errors[field]="Password must be at least 6 characters.");break;case"email":0==/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(data[field])&&(errorNum++,errors[field]="Email must be a valid email.");break;case"desc":data[field].length<4?(errorNum++,errors[field]="Description must be at least 4 characters."):250<data[field].length&&(errorNum++,errors[field]="Description must be less than 250 characters.");break;case"firstname":12<data[field].length&&(errorNum++,errors[field]="Firstname must be less than 13 characters.");break;case"lastname":12<data[field].length&&(errorNum++,errors[field]="Lastname must be less than 13 characters.");break;case"name":data[field].length<4?(errorNum++,errors[field]="Name must have at least 4 characters."):20<data[field].length&&(errorNum++,errors[field]="Name must be less than 21 characters.");break;case"private":"boolean"!=typeof data[field]&&(errorNum++,errors[field]="Private must be true or false");break;case"users":for(var u,usrs=data[field];u<data[field].length;u++)1==/[.!@#$%^&*()_\+\-\=]/g.test(usrs[u])&&(errorNum++,errors[field]="Usernames must not contain any special characters");"boolean"==typeof data.private?1==Array.isArray(usrs)?null!=usrs.length&&0!=usrs.length||(errorNum++,errors[field]="Users must be added in private chatroom"):(errorNum++,errors[field]="Users field must be an array."):(errorNum++,errors[field]="Users must be validated with private boolean.")}};return{check:function(obj){if(errors={username:"",password:"",email:"",firstname:"",lastname:"",desc:"",name:"",users:"",private:""},errorNum=0,fields=Object.keys(obj),data=obj,0<fields.length)for(var i=0;i<fields.length;i++)if(0==data[fields[i]].length||""==data[fields[i]]||null==data[fields[i]]){if("private"!=fields[i]&&"users"!=fields[i]&&"__v"!=fields[i]){errorNum++;var cap=fields[i].charAt(0).toUpperCase()+fields[i].slice(1);errors[fields[i]]=cap+" must not be empty."}}else"email"==fields[i]||"desc"==fields[i]?checkSwitch(fields[i]):(checkSwitch(fields[i]),1==/[.!@#$%^&*()_\+\-\=]/g.test(data[fields[i]])&&"users"!=fields[i]&&(errorNum++,cap=fields[i].charAt(0).toUpperCase()+fields[i].slice(1),errors[fields[i]]=cap+" must not contain any special characters."));else errorNum++,errors.main="Fields must not be empty.";return errors.num=errorNum,errors},taken:function(field,value){var deferred=$q.defer();return"username"===field?$http({method:"GET",url:"chat/user/list",params:{username:value}}).then(function(res){deferred.resolve(res.data)},function(err){deferred.reject(err)}):"email"===field&&$http({method:"GET",url:"chat/user/list",params:{email:value}}).then(function(res){deferred.resolve(res.data)},function(err){deferred.reject(err)}),deferred.promise}}}),app.service("login",["$http","$q","$cookies",function($http,$q,$cookies){return function(user){var deferred=$q.defer();return $http({method:"POST",url:"chat/user/login",data:user}).then(function(response){$cookies.put("accessToken",response.data.token),deferred.resolve(response)},function(err){deferred.reject(err)}),deferred.promise}}]),app.service("messageParser",function(){var partsArray=[],txt={group:[],add:function(){if(0<txt.group.length){var fullText=txt.group[0];if(1<txt.group.length){for(var i=1;i<txt.group.length;i++)fullText=fullText.concat(" ",txt.group[i]);partsArray.push({type:"text",text:fullText}),txt.group=[]}else partsArray.push({type:"text",text:fullText}),txt.group=[]}}},parse=function(part){if(1==/^(http:\/\/|https:\/\/)/g.test(part)){var imgSplit=part.split(".");imgSplit[imgSplit.length-1].toLowerCase();if(/(www\.youtube\.com\/)/g.test(part))if(txt.add(),-1<part.indexOf("watch?v=")){var idSplit=part.split("watch?v=");partsArray.push({type:"video",url:"https://www.youtube.com/embed/"+idSplit[1]})}else partsArray.push({type:"video",url:part});else 1==/(jpg|jpeg|png|gif)/g.test(part)?(txt.add(),partsArray.push({type:"image",url:part})):(txt.add(),partsArray.push({type:"hyperlink",url:part}))}else txt.group.push(part)};return function(text){partsArray=[];for(var partition=text.split(" "),i=0;i<partition.length;i++)if(parse(partition[i]),i==partition.length-1)return txt.add(),partsArray}}),app.service("profile",function($http,$q,$cookies){var token=$cookies.get("accessToken");return{edit:function(userData){var deferred=$q.defer();return $http({method:"PUT",url:"chat/user/update",transformRequest:angular.identity,headers:{"Content-Type":void 0,Authorization:"Bearer "+token},data:userData}).then(function(response){deferred.resolve(response.data),$cookies.put("accessToken",response.data.token)},function(err){deferred.reject(err)}),deferred.promise},remove:function(){var deferred=$q.defer();return $http({method:"DELETE",url:"chat/user/remove",transformRequest:angular.identity,headers:{Authorization:"Bearer "+token}}).then(function(res){deferred.resolve(res.data),$cookies.remove("accessToken")},function(err){deferred.reject(err)}),deferred.promise}}}),app.service("register",["$http","$q","$cookies",function($http,$q,$cookies){return function(user){var deferred=$q.defer();return $http({method:"POST",url:"chat/user/register",transformRequest:angular.identity,headers:{"Content-Type":void 0},data:user}).then(function(response){$cookies.put("accessToken",response.data.token),deferred.resolve(response)},function(err){deferred.reject(err)}),deferred.promise}}]),app.service("userSocket",function($cookies,$http,$q,jwtHelper){var cbErr,token=$cookies.get("accessToken"),user=jwtHelper.decodeToken(token),socket=io.connect("",{query:"token="+token}),errorCb=function(err){cbErr(err)};return socket.on("chatPromise",function(data){data.error?errorCb(data.error):($cookies.put("chatroom",data.name),errorCb())}),socket.on("postRoom",function(data){errorCb("update")}),{promise:function(cb){cbErr=cb},join:function(room){socket.emit("chatJoin",{chatroom:room,user:user.username})},getRooms:function(){var deferred=$q.defer();return $http({method:"GET",url:"chat/chatroom/list"}).then(function(res){deferred.resolve(res.data)},function(err){deferred.reject(err)}),deferred.promise},createRoom:function(roomData){var deferred=$q.defer();return $http({method:"POST",url:"chat/chatroom/create",headers:{Authorization:"Bearer "+token},data:roomData}).then(function(res){deferred.resolve(res.data),socket.emit("postRoom",res.data)},function(err){deferred.reject(err)}),deferred.promise},deleteRoom:function(roomData){var deferred=$q.defer();return console.log(roomData),$http({method:"DELETE",url:"chat/chatroom/remove",headers:{Authorization:"Bearer "+token},params:{name:roomData.name,user:user.username}}).then(function(res){deferred.resolve(res.data),socket.emit("postRoom",res.data)},function(err){deferred.reject(err)}),deferred.promise},editRoom:function(query,data){var deferred=$q.defer();return $http({method:"PUT",url:"chat/chatroom/update",headers:{Authorization:"Bearer "+token},params:{name:query.name,user:user.username},data:data}).then(function(res){deferred.resolve(res.data),socket.emit("postRoom",data)},function(err){deferred.reject(err)}),deferred.promise},getUsers:function(){var deferred=$q.defer();return $http({method:"GET",url:"chat/user/list"}).then(function(res){deferred.resolve(res.data)},function(err){deferred.reject(err)}),deferred.promise},leave:function(room){socket.emit("chatLeave",{chatroom:room,user:user.username}),$cookies.remove("chatroom")}}});